{
    "swagger": "2.0",
    "info": {
        "description": "",
        "version": "1.0.0",
        "title": "Waredly API",
        "termsOfService": "https://waredly.com/page/ConditionsOfUse",
        "contact": {
            "email": "info@waredly.com"
        }
    },
    "host": "api.waredly.com",
    "basePath": "/v1",
    "tags": [
        {
            "name": "article",
            "description": "Everything about your articles"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/article/{articleId}/uploadImage": {
            "post": {
                "tags": [
                    "article"
                ],
                "summary": "uploads an image",
                "description": "",
                "operationId": "uploadFile",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "articleId",
                        "in": "path",
                        "description": "ID of article to update",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "additionalMetadata",
                        "in": "formData",
                        "description": "Additional data to pass to server",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "description": "file to upload",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                },
                "security": [
                    {
                        "articlestore_auth": [
                            "write:articles",
                            "read:articles"
                        ]
                    }
                ]
            }
        },
        "/article": {
            "post": {
                "tags": [
                    "article"
                ],
                "summary": "Add a new article to the store",
                "description": "",
                "operationId": "addArticle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Article object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Article"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "articlestore_auth": [
                            "write:articles",
                            "read:articles"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "article"
                ],
                "summary": "Update an existing article",
                "description": "",
                "operationId": "updateArticle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Article object that needs to be added to the store",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Article"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Article not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "articlestore_auth": [
                            "write:articles",
                            "read:articles"
                        ]
                    }
                ]
            }
        },
        "/article/findByStatus": {
            "get": {
                "tags": [
                    "article"
                ],
                "summary": "Finds articles by status",
                "description": "Multiple status values can be provided with comma separated strings",
                "operationId": "findArticlesByStatus",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status values that need to be considered for filter",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "available",
                                "pending",
                                "sold"
                            ],
                            "default": "available"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "articlestore_auth": [
                            "write:articles",
                            "read:articles"
                        ]
                    }
                ]
            }
        },
        "/article/findByTags": {
            "get": {
                "tags": [
                    "article"
                ],
                "summary": "Finds articles by tags",
                "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
                "operationId": "findArticlesByTags",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "tags",
                        "in": "query",
                        "description": "Tags to filter by",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Article"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid tag value"
                    }
                },
                "security": [
                    {
                        "articlestore_auth": [
                            "write:articles",
                            "read:articles"
                        ]
                    }
                ],
                "deprecated": true
            }
        },
        "/article/{articleId}": {
            "get": {
                "tags": [
                    "article"
                ],
                "summary": "Find article by ID",
                "description": "Returns a single article",
                "operationId": "getArticleById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "articleId",
                        "in": "path",
                        "description": "ID of article to return",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Article"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Article not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "article"
                ],
                "summary": "Updates a article in the store with form data",
                "description": "",
                "operationId": "updateArticleWithForm",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "articleId",
                        "in": "path",
                        "description": "ID of article that needs to be updated",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Updated name of the article",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "status",
                        "in": "formData",
                        "description": "Updated status of the article",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "articlestore_auth": [
                            "write:articles",
                            "read:articles"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "article"
                ],
                "summary": "Deletes an article",
                "description": "",
                "operationId": "deleteArticle",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "header",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "articleId",
                        "in": "path",
                        "description": "Article id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Article not found"
                    }
                },
                "security": [
                    {
                        "articlestore_auth": [
                            "write:articles",
                            "read:articles"
                        ]
                    }
                ]
            }
        }
      
       
     
     
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "articlestore_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://api.waredly.com/auth/sign-in",
            "flow": "implicit",
            "scopes": {
                "read:articles": "read your articles",
                "write:articles": "modify articles in your account"
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Category"
            }
        },
        "Article": {
            "type": "object",
            "required": [
                "name",
                "photoUrls"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "name": {
                    "type": "string",
                    "example": "doggie"
                },
                "photoUrls": {
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "photoUrl"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    },
                    "items": {
                        "xml": {
                            "name": "tag"
                        },
                        "$ref": "#/definitions/Tag"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "article status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tag"
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "articleId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ]
                },
                "complete": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    }
}